
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package mx.itson.catrina.ui;

import java.io.File;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.ZoneId;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import mx.itson.catrina.entidades.Cuenta;
import mx.itson.catrina.entidades.*;
import mx.itson.catrina.enumerador.Tipo;

/**
 *
 * @author julio
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
    }
    Cuenta cuenta;
    double total = 0;
    int mesAnterior = 1;
    double saldoInicial = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnMeses = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblRfc = new javax.swing.JLabel();
        lblDomicilio = new javax.swing.JLabel();
        lblCiudad = new javax.swing.JLabel();
        lblCp = new javax.swing.JLabel();
        lblCuenta = new javax.swing.JLabel();
        lblNumeroCuenta = new javax.swing.JLabel();
        lblClabe = new javax.swing.JLabel();
        lblMoneda = new javax.swing.JLabel();
        lblInicial = new javax.swing.JLabel();
        lblDepositos = new javax.swing.JLabel();
        lblRetiros = new javax.swing.JLabel();
        lblFinal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMovimientos = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        lblFinalPeriodo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setForeground(new java.awt.Color(204, 204, 204));

        jLabel1.setText("Seleccione el archivo de origen de datos:");

        btnBuscar.setText("Buscar...");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel2.setText("Seleccione el mes:");

        btnMeses.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Enero", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        btnMeses.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMesesActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel3.setText("ESTADO DE CUENTA");

        lblNombre.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblNombre.setText("Nombre del cliente");

        lblRfc.setText("RFC");

        lblDomicilio.setText("Domicilio");

        lblCiudad.setText("Ciudad");

        lblCp.setText("Código postal:");

        lblCuenta.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblCuenta.setText("Cuenta contable");

        lblNumeroCuenta.setText("Número de cuenta");

        lblClabe.setText("Clabe");

        lblMoneda.setText("Moneda");

        lblInicial.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblInicial.setText("Saldo inicial");

        lblDepositos.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblDepositos.setText("Depósitos");

        lblRetiros.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblRetiros.setText("Retiros");

        lblFinal.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        lblFinal.setText("Saldo final");

        tblMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FECHA", "DESCRIPCIÓN", "DEPÓSITO", "RETIRO", "SUBTOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMovimientos);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        jLabel4.setText("Detalles de movimientos:");

        lblFinalPeriodo.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        lblFinalPeriodo.setText("Saldo final del periodo:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnMeses, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNombre)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(257, 257, 257)
                                        .addComponent(jLabel3))
                                    .addComponent(lblRfc)
                                    .addComponent(lblDomicilio)
                                    .addComponent(lblCiudad)
                                    .addComponent(lblCp)
                                    .addComponent(lblInicial)
                                    .addComponent(lblDepositos)
                                    .addComponent(lblRetiros)
                                    .addComponent(lblFinal))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 164, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCuenta)
                                    .addComponent(lblNumeroCuenta)
                                    .addComponent(lblClabe)
                                    .addComponent(lblMoneda))
                                .addGap(6, 6, 6)))
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblFinalPeriodo)
                .addGap(231, 231, 231))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(lblCuenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblRfc)
                    .addComponent(lblNumeroCuenta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDomicilio)
                    .addComponent(lblClabe))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCiudad)
                    .addComponent(lblMoneda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCp)
                .addGap(32, 32, 32)
                .addComponent(lblInicial)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblDepositos)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblRetiros)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFinal)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblFinalPeriodo)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));

            if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                File archivo = fileChooser.getSelectedFile();

                byte archivoBytes[] = Files.readAllBytes(archivo.toPath());
                String contenido = new String(archivoBytes, StandardCharsets.UTF_8);

                cuenta = new Cuenta().deserializar(contenido);

                lblNombre.setText(cuenta.getCliente().getNombre());
                lblRfc.setText("RFC: " + cuenta.getCliente().getRfc());
                lblDomicilio.setText("Domicilio: " + cuenta.getCliente().getDomicilio());
                lblCiudad.setText("Ciudad: " + cuenta.getCliente().getCiudad());
                lblCp.setText("Código postal: " + cuenta.getCliente().getCp());

                lblCuenta.setText(cuenta.getProducto());
                lblNumeroCuenta.setText("Cuenta: " + cuenta.getCuenta());
                lblClabe.setText("Clabe: " + cuenta.getClabe());
                lblMoneda.setText("Tipo de moneda: " + cuenta.getMoneda());

                DefaultTableModel movimientoModel = (DefaultTableModel) tblMovimientos.getModel();
                movimientoModel.setRowCount(0);
                int mesSeleccionado = 0;
                switch (btnMeses.getSelectedItem().toString()) {
                    case "Enero":
                        mesSeleccionado = 1;
                        break;
                    case "Febrero":
                        mesSeleccionado = 2;
                        break;
                    case "Marzo":
                        mesSeleccionado = 3;
                        break;
                    case "Abril":
                        mesSeleccionado = 4;
                        break;
                    case "Mayo":
                        mesSeleccionado = 5;
                        break;
                    case "Junio":
                        mesSeleccionado = 6;
                        break;
                    case "Julio":
                        mesSeleccionado = 7;
                        break;
                    case "Agosto":
                        mesSeleccionado = 8;
                        break;
                    case "Septiembre":
                        mesSeleccionado = 9;
                        break;
                    case "Octubre":
                        mesSeleccionado = 10;
                        break;
                    case "Noviembre":
                        mesSeleccionado = 11;
                        break;
                    case "Diciembre":
                        mesSeleccionado = 12;
                        break;
                }

                for (Movimiento m : cuenta.getMovimientos()) {
                    SimpleDateFormat fechaFormato = new SimpleDateFormat("dd/MM/yyyy");
                    // Determinar el mes del movimiento. Devuelve 1 - Enero, 2 - Febrero...12 - Diciembre.
                    String fecha = fechaFormato.format(m.getFecha());
                    LocalDate localDate = m.getFecha().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
                    int mes = localDate.getMonthValue();

                    if (mes == mesSeleccionado) {
                        if (m.getTipo() == Tipo.DEPOSITO) {
                            double deposito = m.getCantidad();
                            total += m.getCantidad();
                            movimientoModel.addRow(new Object[]{(fecha), m.getDescripcion(), deposito, (null), (total)});

                        } else {
                            double retiro = m.getCantidad();
                            total -= m.getCantidad();
                            movimientoModel.addRow(new Object[]{(fecha), m.getDescripcion(), (null), retiro, (total)});

                        }
                    }

                }
                lblFinal.setText("Saldo final: " + total);
                lblFinalPeriodo.setText("Saldo final del periodo: " + total);
            }
        } catch (Exception ex) {
            System.err.print("Ocurrió un error: " + ex);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnMesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMesesActionPerformed
        // TODO add your handling code here:
        DefaultTableModel movimientoModel = (DefaultTableModel) tblMovimientos.getModel();
        movimientoModel.setRowCount(0);
       
    
        int mesSeleccionado = 0;
        switch (btnMeses.getSelectedItem().toString()) {
            case "Enero":
                mesSeleccionado = 1;
                break;
            case "Febrero":
                mesSeleccionado = 2;
                break;
            case "Marzo":
                mesSeleccionado = 3;
                break;
            case "Abril":
                mesSeleccionado = 4;
                break;
            case "Mayo":
                mesSeleccionado = 5;
                break;
            case "Junio":
                mesSeleccionado = 6;
                break;
            case "Julio":
                mesSeleccionado = 7;
                break;
            case "Agosto":
                mesSeleccionado = 8;
                break;
            case "Septiembre":
                mesSeleccionado = 9;
                break;
            case "Octubre":
                mesSeleccionado = 10;
                break;
            case "Noviembre":
                mesSeleccionado = 11;
                break;
            case "Diciembre":
                mesSeleccionado = 12;
                break;
        }
        boolean setSaldoInicial = false;
        System.out.println(mesSeleccionado);
        System.out.println(mesAnterior);
        if (mesSeleccionado < mesAnterior) {
            lblInicial.setText("0");
            total = 0;
            
            System.out.println("reset");

        }
        mesAnterior = mesSeleccionado;
        for (Movimiento m : cuenta.getMovimientos()) {
            SimpleDateFormat fechaFormato = new SimpleDateFormat("dd/MM/yyyy");
            // Determinar el mes del movimiento. Devuelve 1 - Enero, 2 - Febrero...12 - Diciembre.
            String fecha = fechaFormato.format(m.getFecha());
            LocalDate localDate = m.getFecha().toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            int mes = localDate.getMonthValue();

            if (mes <= mesSeleccionado) {
                if (m.getTipo() == Tipo.DEPOSITO) {
                    total += m.getCantidad();
                } else {
                    total -= m.getCantidad();
                }
            }
            if (mes < mesSeleccionado) {
                if (m.getTipo() == Tipo.DEPOSITO) {
                    saldoInicial += m.getCantidad();
                } else {
                    saldoInicial -= m.getCantidad();
                }
            }

            if (mes == mesSeleccionado) {
                if (setSaldoInicial == false) {
                    lblInicial.setText(String.valueOf(saldoInicial));
                    setSaldoInicial = true;
                }
                if (m.getTipo() == Tipo.DEPOSITO) {
                    double deposito = m.getCantidad();
                    movimientoModel.addRow(new Object[]{(fecha), m.getDescripcion(), deposito, (null), (total)});

                } else {
                    double retiro = m.getCantidad();
                    movimientoModel.addRow(new Object[]{(fecha), m.getDescripcion(), (null), retiro, (total)});

                }
            }

        }
        lblFinal.setText("Saldo final :" + total);
        lblFinalPeriodo.setText("Saldo final del periodo: " + total);
    }//GEN-LAST:event_btnMesesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> btnMeses;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblCiudad;
    private javax.swing.JLabel lblClabe;
    private javax.swing.JLabel lblCp;
    private javax.swing.JLabel lblCuenta;
    private javax.swing.JLabel lblDepositos;
    private javax.swing.JLabel lblDomicilio;
    private javax.swing.JLabel lblFinal;
    private javax.swing.JLabel lblFinalPeriodo;
    private javax.swing.JLabel lblInicial;
    private javax.swing.JLabel lblMoneda;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumeroCuenta;
    private javax.swing.JLabel lblRetiros;
    private javax.swing.JLabel lblRfc;
    private javax.swing.JTable tblMovimientos;
    // End of variables declaration//GEN-END:variables
}
